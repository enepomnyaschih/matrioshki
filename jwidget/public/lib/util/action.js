/*    JW Ajax action adapter.        Copyright (C) 2011 Egor Nepomnyaschih        This program is free software: you can redistribute it and/or modify    it under the terms of the GNU Lesser General Public License as published by    the Free Software Foundation, either version 3 of the License, or    (at your option) any later version.        This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU Lesser General Public License for more details.        You should have received a copy of the GNU Lesser General Public License    along with this program.  If not, see <http://www.gnu.org/licenses/>.*/JW.Action = JW.Class.extend({    requestCls          : null,         // [optional] Class ~ JW.Request        url                 : null,         // [required] String    data                : null,         // [optional] Object or String    timeout             : null,         // [optional] Number, see $.ajax for default value    type                : null,         // [optional] String, see $.ajax for default value    dataType            : null,         // [optional] String, see $.ajax for default value    contentType         : null,         // [optional] String, see $.ajax for default value    jsonp               : null,         // [optional] String, see $.ajax for default value    jsonpCallback       : null,         // [optional] String, see $.ajax for default value    username            : null,         // [optional] String, see $.ajax for default value    password            : null,         // [optional] String, see $.ajax for default value    scriptCharset       : null,         // [optional] String, see $.ajax for default value    cache               : null,         // [optional] Boolean, see $.ajax for default value    global              : null,         // [optional] Boolean, see $.ajax for default value    ifModified          : null,         // [optional] Boolean, see $.ajax for default value    processData         : null,         // [optional] Boolean, see $.ajax for default value    traditional         : null,         // [optional] Boolean, see $.ajax for default value        init: function(config)    {        this._super();        JW.apply(this, config);        this.requestCls = this.requestCls || JW.Request;    },        createRequest: function()    {        var cls = this.requestCls;                return new cls({            url             : this.url,            data            : this.data,            timeout         : this.timeout,            type            : this.type,            dataType        : this.dataType,            contentType     : this.contentType,            jsonp           : this.jsonp,            jsonpCallback   : this.jsonpCallback,            username        : this.username,            password        : this.password,            scriptCharset   : this.scriptCharset,            async           : this.async,            cache           : this.cache,            global          : this.global,            ifModified      : this.ifModified,            processData     : this.processData,            traditional     : this.traditional        });    }});